// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  //Netlify deployment
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int            @id @default(autoincrement())
  email     String         @unique
  name      String
  password  String
  createdAt DateTime       @default(now())
  posts     Post[]
  favorites UserFavorite[]
}

model Post {
  id          Int            @id @default(autoincrement())
  sourceInfo  String?
  source      Source         @relation(fields: [sourceId], references: [id])
  sourceId    Int
  author      Author         @relation(fields: [authorId], references: [id])
  authorId    Int
  content     String?
  published   Boolean        @default(false)
  private     Boolean        @default(false)
  is_deleted  Boolean        @default(false)
  creator     User           @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId   Int
  favoritedBy UserFavorite[]
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Source {
  id    Int    @id @default(autoincrement())
  title String
  posts Post[]
}

model UserFavorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
